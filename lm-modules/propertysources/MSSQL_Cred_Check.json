{
    "scheduleOption": 0,
    "dataType": 0,
    "description": "",
    "appliesTo": "isMSSQL()",
    "technology": "",
    "type": "propertyrule",
    "params": [
        {
            "name": "linuxcmdline",
            "comment": "",
            "value": ""
        },
        {
            "name": "linuxscript",
            "comment": "",
            "value": ""
        },
        {
            "name": "scriptgroovy",
            "comment": "",
            "value": "import groovy.sql.Sql\ndef hostname = hostProps.get(\"system.hostname\")\ndef sqlInstances = hostProps.get(\"mssql.sql_server_instances\") ?: hostProps.get(\"auto.sql_server_instances\")\n\nif (sqlInstances){\n    sqlInstances.toString().tokenize(\",\").each{ \n        instanceName ->\n        def jdbcConnectionString = hostProps.get(\"mssql.${instanceName.trim().toLowerCase()}.mssql_url\") ?: hostProps.get(\"auto.${instanceName.trim().toLowerCase()}.mssql_url\")\n        def user = hostProps.get(\"mssql.${instanceName.trim().toLowerCase()}.user\") ?: hostProps.get(\"jdbc.mssql.user\") ?: \"\"\n        def pass = hostProps.get(\"mssql.${instanceName.trim().toLowerCase()}.pass\") ?: hostProps.get(\"jdbc.mssql.pass\") ?: \"\"\n        if (jdbcConnectionString){\n            try {\n                String driver = \"com.microsoft.sqlserver.jdbc.SQLServerDriver\"\n                Sql.newInstance(jdbcConnectionString, user, pass, driver)\n                println \"mssql.working=yes\"\n            }\n            catch (Exception e) {\n                println \"mssql.working=no\"\n            }\n        }\n    }\n}\nreturn 0"
        },
        {
            "name": "scripttype",
            "comment": "embed",
            "value": "embed"
        },
        {
            "name": "windowscmdline",
            "comment": "",
            "value": ""
        },
        {
            "name": "windowsscript",
            "comment": "",
            "value": ""
        }
    ],
    "version": 1595381083,
    "tags": "",
    "auditVersion": 0,
    "name": "MSSQL_Cred_Check",
    "id": 169,
    "group": "RFA Custom"
}