{
    "scheduleOption": 0,
    "dataType": 0,
    "description": "",
    "appliesTo": "isPaloAlto()",
    "technology": "",
    "type": "propertyrule",
    "params": [
        {
            "name": "linuxcmdline",
            "comment": "",
            "value": ""
        },
        {
            "name": "linuxscript",
            "comment": "",
            "value": ""
        },
        {
            "name": "scriptgroovy",
            "comment": "",
            "value": "<#\n.NOTES\n    Author:     Andy Escolastico\n#>\n#----------------------------------------------------------[Declarations]----------------------------------------------------------#\n\n# lm variables\n$accessId = '##api.user##'\n$accessKey = '##api.pass##'\n$tenantName = '##api.account##'\n$deviceID = \"##system.deviceId##\"\n\n# pa variables\n$paIP = \"##system.hostname##\"\n$paUser = \"##paloalto.user##\"\n$paPass = \"##paloalto.pass##\"\n$paFinalProperty = \"##paloalto.apikey.pass##\"\n\n#-----------------------------------------------------------[Functions]------------------------------------------------------------#\n\n(new-object Net.WebClient).DownloadString('https://raw.githubusercontent.com/RFAInc/rfa-logicmonitor/main/api-functions.ps1') | Invoke-Expression\n(new-object Net.WebClient).DownloadString('https://raw.githubusercontent.com/RFAInc/rfa-backups/main/general-functions.ps1') | Invoke-Expression\n\n#-----------------------------------------------------------[Execution]------------------------------------------------------------#\n\n# Ignores invalid certificate errors\nSkip-InvalidCertErrors\n\n# pa request\n$paRequest = @{\n    Method = \"GET\"\n    Uri = \"https://$paIP/api/?type=keygen&user=$paUser&password=$paPass\"\n}\n[xml]$paResponse = Invoke-WebRequest @paRequest -UseBasicParsing\n$paKey = $paResponse.response.result.key\n\nif ($paKey) {\n    Write-Output \"auto.paloalto.creds.working=yes\"\n} else {\n    Write-Output \"auto.paloalto.creds.working=no\"\n    exit 0\n}\n\n# lm request\n$lmBody = @{\n    value = $paKey\n}\n$lmRequest = @{\n    accessId = $accessId\n    accessKey = $accessKey\n    tenantName = $tenantName\n}\nif ($paFinalProperty) {\n    $lmRequest.resourcePath = \"/device/devices/$deviceID/properties/paloalto.apikey.pass/\"\n    $lmRequest.httpVerb = \"PUT\"\n    $lmRequest.httpBody = $lmBody | ConvertTo-Json\n    $lmResponse = Invoke-LomoApi @lmRequest\n} else {\n    $lmBody.name = \"paloalto.apikey.pass\"\n    $lmRequest.resourcePath = \"/device/devices/$deviceID/properties/\"\n    $lmRequest.httpVerb = \"POST\"\n    $lmRequest.httpBody = $lmBody | ConvertTo-Json\n    $lmResponse = Invoke-LomoApi @lmRequest\n}"
        },
        {
            "name": "scripttype",
            "comment": "embed",
            "value": "powerShell"
        },
        {
            "name": "windowscmdline",
            "comment": "",
            "value": ""
        },
        {
            "name": "windowsscript",
            "comment": "",
            "value": ""
        }
    ],
    "version": 1607128571,
    "tags": "",
    "auditVersion": 0,
    "name": "PaloAlto_Cred_Set&Check",
    "id": 174,
    "group": "RFA Custom"
}