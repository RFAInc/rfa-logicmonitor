{
    "scheduleOption": 0,
    "dataType": 0,
    "description": "",
    "appliesTo": "snmp.authToken && snmp.privToken",
    "technology": "",
    "type": "propertyrule",
    "params": [
        {
            "name": "linuxcmdline",
            "comment": "",
            "value": ""
        },
        {
            "name": "linuxscript",
            "comment": "",
            "value": ""
        },
        {
            "name": "scriptgroovy",
            "comment": "",
            "value": "<#\n.NOTES\n    Author:     Andy Escolastico\n#>\n#----------------------------------------------------------[Declarations]----------------------------------------------------------#\n\n# lm vairables\n$HostName = \"##HOSTNAME##\"\n$AccessId = \"##API.USER##\"\n$AccessKey = \"##API.PASS##\"\n$TenantName = \"##API.ACCOUNT##\"\n$DeviceID = \"##SYSTEM.DEVICEID##\"\n\n# snmp variables\n$UserName = \"##SNMP.SECURITY##\"\n$AuthSecret = \"##SNMP.AUTHTOKEN##\"\n$PrivSecret = \"##SNMP.PRIVTOKEN##\"\nif (\"##SNMP.AUTH##\" -ne \"MD5\") {\n    $CurrAuthProperty = \"##SNMP.AUTH##\" -replace ('[^a-zA-Z-]','')\n} else {\n    $CurrAuthProperty = \"##SNMP.AUTH##\"\n}\n$CurrPrivProperty = \"##SNMP.PRIV##\" -replace ('[^a-zA-Z-]','')\n$TestOID = \".1.3.6.1.2.1.1.1.0\"\n$AuthTypes = @(\"MD5\", \"SHA1\", \"SHA256\")\n$PrivTypes = @(\"DES\", \"AES128\", \"AES192\", \"AES256\")\n\n#-----------------------------------------------------------[Functions]------------------------------------------------------------#\n\n(New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/RFAInc/rfa-logicmonitor/main/api-functions.ps1') | Invoke-Expression\n(New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/RFAInc/rfa-backups/main/general-functions.ps1') | Invoke-Expression\n\nif(!(Get-Module -ListAvailable -Name \"SNMPv3\")) {\n    Write-Output \"snmp.propadder.debug=snmpv3 module not found.\"\n    Install-Module -Name \"SNMPv3\" -Confirm:$False -Force\n    exit 0\n}\nImport-Module -Name \"SNMPv3\"\n\n#-----------------------------------------------------------[Execution]------------------------------------------------------------#\n\n$SnmpRequest = @{\n    UserName   = $UserName\n    Target     = $HostName\n    OID        = $TestOID\n    AuthSecret = $AuthSecret\n    PrivSecret = $PrivSecret\n    ErrorAction = \"SilentlyContinue\"\n    WarningAction = \"SilentlyContinue\"\n}\n\n$SnmpRequest.AuthType = $AuthProperty\n$SnmpRequest.PrivType = $PrivProperty\n\n\n# test all available properties\nforeach ($AuthType in $AuthTypes) {\n    foreach ($PrivType in $PrivTypes) {\n        $SnmpRequest.AuthType = $AuthType\n        $SnmpRequest.PrivType = $PrivType\n        $SnmpResponse = Invoke-SNMPv3Get @SnmpRequest\n        if ($SnmpResponse.Node) {\n            if ($AuthType -ne \"MD5\") {\n                $NewAuthProperty = $AuthType -replace ('[^a-zA-Z-]','')\n            } else {\n                $NewAuthProperty = $AuthType\n            }\n            $NewPrivProperty = $PrivType -replace ('[^a-zA-Z-]','')\n            break\n        }\n    }\n}\n\n# exit if no successful properties discovered\nif (!($NewAuthProperty -or $NewPrivProperty)) {\n    Write-Output \"snmp.propadder.debug=no working props found.\"\n    exit 0\n}\n\n# exit if properties are already correct\nif (($NewAuthProperty -eq $CurrAuthProperty) -and ($NewPrivProperty -eq $CurrPrivProperty)) {\n    Write-Output \"snmp.propadder.debug=existing props are correct\"\n    exit 0\n}\n\n\n## lm requests\n$lmRequest = @{\n    accessId = $AccessId\n    accessKey = $AccessKey\n    tenantName = $TenantName\n}\n\n# lm auth request\n$lmBody = @{\n    value = $NewAuthProperty\n}\n# update auth property\nif ($CurrAuthProperty) {\n    $lmRequest.resourcePath = \"/device/devices/$DeviceID/properties/snmp.auth/\"\n    $lmRequest.httpVerb = \"PUT\"\n    $lmRequest.httpBody = $lmBody | ConvertTo-Json\n    $lmResponse = Invoke-LomoApi @lmRequest\n# create auth property\n} else {\n    $lmBody.name = \"snmp.auth\"\n    $lmRequest.resourcePath = \"/device/devices/$DeviceID/properties/\"\n    $lmRequest.httpVerb = \"POST\"\n    $lmRequest.httpBody = $lmBody | ConvertTo-Json\n    $lmResponse = Invoke-LomoApi @lmRequest\n}\n\n# lm priv request\n$lmBody = @{\n    value = $NewPrivProperty\n}\n# update priv property\nif ($CurrPrivProperty) {\n    $lmRequest.resourcePath = \"/device/devices/$DeviceID/properties/snmp.priv/\"\n    $lmRequest.httpVerb = \"PUT\"\n    $lmRequest.httpBody = $lmBody | ConvertTo-Json\n    $lmResponse = Invoke-LomoApi @lmRequest\n# create priv property\n} else {\n    $lmBody.name = \"snmp.priv\"\n    $lmRequest.resourcePath = \"/device/devices/$DeviceID/properties/\"\n    $lmRequest.httpVerb = \"POST\"\n    $lmRequest.httpBody = $lmBody | ConvertTo-Json\n    $lmResponse = Invoke-LomoApi @lmRequest\n}\n\nWrite-Output \"snmp.propadder.debug=working props found ($NewAuthProperty+$NewPrivProperty).\""
        },
        {
            "name": "scripttype",
            "comment": "embed",
            "value": "powerShell"
        },
        {
            "name": "windowscmdline",
            "comment": "",
            "value": ""
        },
        {
            "name": "windowsscript",
            "comment": "",
            "value": ""
        }
    ],
    "version": 1607759752,
    "tags": "",
    "auditVersion": 0,
    "name": "LogicMonitor_SNMP_AddProperties",
    "id": 183,
    "group": "RFA Custom"
}